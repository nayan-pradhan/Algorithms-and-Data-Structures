inOrderVisit(Node n)
    if (n == NIL)
        return
    inOrderVisit(n->left)
    n.operation()
    inOrderVisit(n->right)

// recursive algoirithm
treeSearch(x, k)
    if (x == NILL) || (k = x->key)
        return x
    if k<x.key
        return treeSearch(x->left, k)
    else
        return treeSearch(x->right, k)

// iterative algoirithm
treeSearch(x, k)
    while (x != NULL || x.key != k)
        if k < x.key
            x = x->left
        else
            x = x->right
    return x

// finding minimum recursive
treeMin(x)
    while (x->left)
        return treeMin(x->left)

// finding minimum iterative 
treeMin(x)
    while (x->left != NULL)
        x = x->left
    return x

// finding maximum
treeMax(x)
    while (x->right)
        x = x->right
    return x

