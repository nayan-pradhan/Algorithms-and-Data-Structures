kmpMatcher(T, P)
    n = T.length
    m = P.length 
    pie = ComputePrefixFunction(P)
    q = 0 
    for i = 1 to n 
        while q>0 && T[i] != P[q+1]
            q = pi[q]
        if T[i] == P[q+1]
            q++
        if q = m 
            print Pattern found
            q = pi[q]


ComputePrefixFunction(P)
    m = P.length 
    let pi[1 .. m] be a new array
    pi[1] = 0
    k = 0
    for q = 2 to m 
        while k>0 and P[k+1] != P[q]
            k = pi[k]
        if P[k+1] == P[q]
            k++ 
        pi[q] = k
    return pi

    