KMPMatcher (T, P)
    n = T.length
    m = P.length 
    pie = ComputePreFix(P)
    q = 0 
    for i = 1 to n 
        while q>0 and P[q+1] != P[i]
            q = pie[q]
        if P[q+1] == P[i]
            q++ 
        if q == m 
            print "solution bit shifted with" i-m
            q = pie[q]


ComputePreFix(P)
    m = P.length 
    Let pie[1... m]
    k = 0
    for q = 2 to m 
        while k>0 and P[q] != P[k+1]
            k = pie[k]
        if P[k+1] = P[q]
            k = k + 1
        pie[q] = k 
    return pie 