LeftRotate(T,x)
    y = x->right
    x->right = y->left 
    if (y->left != NIL)
        y->left->parent = x
    y->parent = x->parent
    if (x->parent == NIL)
        T.root = y
    else if (x == x->parent->right)
        x->parent->right = y
    else
        x->parent->left = y
    y->left = x
    x->parent = y

RightRotate(T, y)
    x = y->left 
    y->left = x->right 
    if (x->right != NIL)
        x->right->parent = y
    x->parent = y->parent
    if (y->parent == NIL)
        T.root = x
    else if (y == y->parent->left)
        y->parent->left = x
    else 
        y->parent->right = x
    x->right = y
    y->parent = x

RBInsertion(T, z)
    y = T.NIL
    x = T.root 
    while (x!=T.NIL)
        y = x
        if (x.key > z.key)
            x = x->left
        else
            x = x->right 
    z->parent = y
    if (y == T.NIL)
        T.root = z
    else if (y.key > z.key) 
        y->left = z
    else 
        y->right = z
    //now red black property part 
    z->right = T.NIL
    z->left = T.NIL 
    z->color = RED 
    REInsertFixup(T,z)

RBInsertFixup(T, z)
    while (z->parent->color!=RED)   
        if (z->parent==z->parent->parent->left)
            y = z->parent->parent->right            //uncle
            if (y->color == RED)
                z->parent->color = BLACK 
                y->color = BLACK 
                z->parent->parent->color = RED
                z = z->parent->parent               //to check if the above things violated any other properties or not
            else if (z == z->parent->right)
                z = z->parent 
                LeftRotate(T,z)
                z->parent->color = BLACK
                z->parent->parent->color=RED
                RightRotate(T, z->parent->parent)
        else    
            same as above with right
    T.root->color = BLACK

RBDelete(T, z)
    y = z
    y-original-color = y.color
    if z->left = T